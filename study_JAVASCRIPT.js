
/*****************************************************************************************
 * 变量的基本语法规则
 *****************************************************************************************/

//javascript和swift语言很像的是，它也是有变量和常量的定义
var a;
a;
//上面的a这个时候认为是无定义的
//只要第一次对a进行定义了，即定义为“var”变量，再次对a定义的时候就不需要再对a进行说明了
//如果是同时写了两边的”var a；“反而会出现问题，认为第二遍的 “var a”无效

//javascript对格式没有非常严格的定义，实际上，下面两条命令在javascript看来压根没什么区别
b = 1;
//var b = 1;
//注意：此时的b认为是全局变量
//javascript同时也是一个动态语言，也就是说，它的变量的类型没有限制，变量可以随时更改类型


/*
JAVASCRIPT的工作方式是先获得所有声明的变量，然后再一行一行的运行，这样所有变量的声明语句，都会被提升到
代码的头部，这中比较特殊的运行方式就叫“变量提升”（hoisting）
*/
var a;
console.log(a);
a = 1;
//console在控制台中显示的就是变量a的值,但是如果只有上面三行代码，最后运行结果必然是undefined，表示变量a已经声明，但还为赋值

/*****************************************************************************************
 * 标识符的基本语法规则
 *****************************************************************************************/

var 临时变量 = 1;       //中文是合法的标识符
//1a;   标识符第一个不能是数字
//javascript兼容了HTML的全部语法规则


/*****************************************************************************************
 * 基本语法规则
 *****************************************************************************************/
/*case代码块之中没有break语句，导致不会跳出switch结构，而会一直执行下去。正确的写法是像下面这样*/
switch (x) {
    case 1:
      console.log('x 等于1');
      break;
    case 2:
      console.log('x 等于2');
      break;
    default:
      console.log('x 等于其他值');
  }
  //总而言之，swift是必须要写break的

  /*
  需要注意的是，switch语句后面的表达式，
  与case语句后面的表示式比较运行结果时，采用的是严格相等运算符（===），
  而不是相等运算符（==），这意味着比较时不会发生类型转换。
  */
  var x = 1;

  switch (x) {
    case true:
      console.log('x 发生类型转换');
      break;
    default:
      console.log('x 没有发生类型转换');
  }
//上面代码中，由于变量x没有发生类型转换，所以不会执行case true的情况
/*****************************************************************************************
 * 比较特殊的运算符
 *****************************************************************************************/

//"?:"表示逻辑判断，具体写法为：  （条件）？表达式1:表达式2
//在这样的表达式中，如果true则执行表达式1，否则就返回“表达式2”的值
var even = (n% 2 === 0) ? true : false;
//当然，这个判断式也可以写成下面的表达形式
var even;
if(n % 2 === 0)
{
    even = true;
}
else 
{
    even = false;
}

var myVar
console.log(
    myVar ?
    'myVar has a value':
    'myVar does not have a value'
)
//最后的输出内容是myVar does not have a value
//上面代码利用三元运算符，输出相应的涕泗
//“===”表示的是严格相等运算符
